from collections import Counter  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ Counter –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É –∫—ñ–ª—å–∫–æ—Å—Ç—ñ –≤—Ö–æ–¥–∂–µ–Ω—å –µ–ª–µ–º–µ–Ω—Ç—ñ–≤

def calculate_distance(left_list, right_list):
    """
    –û–±—á–∏—Å–ª—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ —á–∏—Å–ª–∞–º–∏ —É –¥–≤–æ—Ö —Å–ø–∏—Å–∫–∞—Ö –ø—ñ—Å–ª—è —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è.

    :param left_list: —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –∑–ª—ñ–≤–∞
    :param right_list: —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª —Å–ø—Ä–∞–≤–∞
    :return: –∑–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤—ñ–¥—Å—Ç–∞–Ω–µ–π –º—ñ–∂ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –ø–∞—Ä–∞–º–∏
    """
    left_sorted = sorted(left_list)  # –°–æ—Ä—Ç—É—î–º–æ –ª—ñ–≤–∏–π —Å–ø–∏—Å–æ–∫
    right_sorted = sorted(right_list)  # –°–æ—Ä—Ç—É—î–º–æ –ø—Ä–∞–≤–∏–π —Å–ø–∏—Å–æ–∫

    # –û–±—á–∏—Å–ª—é—î–º–æ –≤—ñ–¥—Å—Ç–∞–Ω—å –º—ñ–∂ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–º–∏ –ø–∞—Ä–∞–º–∏ —á–∏—Å–µ–ª
    total_distance = sum(abs(l - r) for l, r in zip(left_sorted, right_sorted))
    
    return total_distance


def calculate_similarity_score(left_list, right_list):
    """
    –û–±—á–∏—Å–ª—é—î –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å—Ö–æ–∂–æ—Å—Ç—ñ –º—ñ–∂ –¥–≤–æ–º–∞ —Å–ø–∏—Å–∫–∞–º–∏.
    
    :param left_list: —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª –∑–ª—ñ–≤–∞
    :param right_list: —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª —Å–ø—Ä–∞–≤–∞
    :return: –∑–∞–≥–∞–ª—å–Ω–∏–π –∫–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å—Ö–æ–∂–æ—Å—Ç—ñ
    """
    right_count = Counter(right_list)  # –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ, —Å–∫—ñ–ª—å–∫–∏ —Ä–∞–∑—ñ–≤ –∫–æ–∂–Ω–µ —á–∏—Å–ª–æ –∑—É—Å—Ç—Ä—ñ—á–∞—î—Ç—å—Å—è —É –ø—Ä–∞–≤–æ–º—É —Å–ø–∏—Å–∫—É
    similarity_score = sum(num * right_count[num] for num in left_list)  # –û–±—á–∏—Å–ª—é—î–º–æ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É

    return similarity_score


# --- –û—Å–Ω–æ–≤–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–∞ ---
if __name__ == "__main__":
    # –ó—á–∏—Ç—É—î–º–æ —Å–ø–∏—Å–∫–∏ –∑ —Ñ–∞–π–ª—É
    file_path = "./WEB-Back-end-/Lab_1.2/input_1.txt"  # –§–∞–π–ª —ñ–∑ —á–∏—Å–ª–∞–º–∏

    left_list = []
    right_list = []

    # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ —Ñ–∞–π–ª –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è
    with open(file_path, 'r') as file:
        for line in file:
            left, right = map(int, line.split())  # –†–æ–∑–¥—ñ–ª—è—î–º–æ —á–∏—Å–ª–∞ –≤ —Ä—è–¥–∫—É
            left_list.append(left)  # –î–æ–¥–∞—î–º–æ —É –ª—ñ–≤–∏–π —Å–ø–∏—Å–æ–∫
            right_list.append(right)  # –î–æ–¥–∞—î–º–æ —É –ø—Ä–∞–≤–∏–π —Å–ø–∏—Å–æ–∫

    # --- –û—Å–Ω–æ–≤–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è ---
    total_distance = calculate_distance(left_list, right_list)
    print(f"‚úÖ –ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤—ñ–¥—Å—Ç–∞–Ω–µ–π: {total_distance}")

    # --- EXTRA TASK (–ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å—Ö–æ–∂–æ—Å—Ç—ñ) ---
    similarity_score = calculate_similarity_score(left_list, right_list)
    print(f"üéØ –ö–æ–µ—Ñ—ñ—Ü—ñ—î–Ω—Ç —Å—Ö–æ–∂–æ—Å—Ç—ñ: {similarity_score}")